{"ast":null,"code":"var _jsxFileName = \"C:\\\\AEM-spa-tutorial\\\\Code\\\\aem-guides-wknd-graphql\\\\remote-spa-tutorial\\\\react-app\\\\src\\\\components\\\\editable\\\\EditableTitle.js\";\n// Import the withMappable API provided bu the AEM SPA Editor JS SDK\nimport { EditableComponent, MapTo } from '@adobe/aem-react-editable-components';\nimport React from 'react';\n\n// Import the AEM the Title component implementation and it's Empty Function\nimport { Title, titleIsEmpty } from \"./core/Title\";\nimport { withConditionalPlaceHolder } from \"./core/util/withConditionalPlaceholder\";\nimport { withStandardBaseCssClass } from \"./core/util/withStandardBaseCssClass\";\n\n// The sling:resourceType of the AEM component used to collected and serialize the data this React component displays\nconst RESOURCE_TYPE = \"wknd-app/components/title\";\n\n// Create an EditConfig to allow the AEM SPA Editor to properly render the component in the Editor's context\nconst EditConfig = {\n  emptyLabel: \"Title\",\n  // The component placeholder in AEM SPA Editor\n  isEmpty: titleIsEmpty,\n  // The function to determine if this component has been authored\n  resourceType: RESOURCE_TYPE // The sling:resourceType this component is mapped to\n};\n\nexport const WrappedTitle = props => {\n  const Wrapped = withConditionalPlaceHolder(withStandardBaseCssClass(Title, \"cmp-title\"), titleIsEmpty, \"TitleV2\");\n  return /*#__PURE__*/React.createElement(Wrapped, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }));\n};\n\n// EditableComponent makes the component editable by the AEM editor, either rendered statically or in a container\nconst EditableTitle = props => /*#__PURE__*/React.createElement(EditableComponent, Object.assign({\n  config: EditConfig\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 34\n  }\n}), /*#__PURE__*/React.createElement(WrappedTitle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 84\n  }\n}));\n\n// MapTo allows the AEM SPA Editor JS SDK to dynamically render components added to SPA Editor Containers\nMapTo(RESOURCE_TYPE)(EditableTitle);\nexport default EditableTitle;","map":{"version":3,"names":["EditableComponent","MapTo","React","Title","titleIsEmpty","withConditionalPlaceHolder","withStandardBaseCssClass","RESOURCE_TYPE","EditConfig","emptyLabel","isEmpty","resourceType","WrappedTitle","props","Wrapped","createElement","Object","assign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","EditableTitle","config"],"sources":["C:/AEM-spa-tutorial/Code/aem-guides-wknd-graphql/remote-spa-tutorial/react-app/src/components/editable/EditableTitle.js"],"sourcesContent":["// Import the withMappable API provided bu the AEM SPA Editor JS SDK\r\nimport { EditableComponent, MapTo } from '@adobe/aem-react-editable-components';\r\nimport React from 'react'\r\n\r\n// Import the AEM the Title component implementation and it's Empty Function\r\nimport { Title, titleIsEmpty } from \"./core/Title\";\r\nimport { withConditionalPlaceHolder } from \"./core/util/withConditionalPlaceholder\";\r\nimport { withStandardBaseCssClass } from \"./core/util/withStandardBaseCssClass\";\r\n\r\n// The sling:resourceType of the AEM component used to collected and serialize the data this React component displays\r\nconst RESOURCE_TYPE = \"wknd-app/components/title\";\r\n\r\n// Create an EditConfig to allow the AEM SPA Editor to properly render the component in the Editor's context\r\nconst EditConfig = {\r\n    emptyLabel: \"Title\",        // The component placeholder in AEM SPA Editor\r\n    isEmpty: titleIsEmpty,      // The function to determine if this component has been authored\r\n    resourceType: RESOURCE_TYPE // The sling:resourceType this component is mapped to\r\n};\r\n\r\nexport const WrappedTitle = (props) => {\r\n    const Wrapped = withConditionalPlaceHolder(withStandardBaseCssClass(Title, \"cmp-title\"), titleIsEmpty, \"TitleV2\")\r\n    return <Wrapped {...props} />\r\n}\r\n\r\n// EditableComponent makes the component editable by the AEM editor, either rendered statically or in a container\r\nconst EditableTitle = (props) => <EditableComponent config={EditConfig} {...props}><WrappedTitle /></EditableComponent>\r\n\r\n// MapTo allows the AEM SPA Editor JS SDK to dynamically render components added to SPA Editor Containers\r\nMapTo(RESOURCE_TYPE)(EditableTitle);\r\n\r\nexport default EditableTitle;\r\n"],"mappings":";AAAA;AACA,SAASA,iBAAiB,EAAEC,KAAK,QAAQ,sCAAsC;AAC/E,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,KAAK,EAAEC,YAAY,QAAQ,cAAc;AAClD,SAASC,0BAA0B,QAAQ,wCAAwC;AACnF,SAASC,wBAAwB,QAAQ,sCAAsC;;AAE/E;AACA,MAAMC,aAAa,GAAG,2BAA2B;;AAEjD;AACA,MAAMC,UAAU,GAAG;EACfC,UAAU,EAAE,OAAO;EAAS;EAC5BC,OAAO,EAAEN,YAAY;EAAO;EAC5BO,YAAY,EAAEJ,aAAa,CAAC;AAChC,CAAC;;AAED,OAAO,MAAMK,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAMC,OAAO,GAAGT,0BAA0B,CAACC,wBAAwB,CAACH,KAAK,EAAE,WAAW,CAAC,EAAEC,YAAY,EAAE,SAAS,CAAC;EACjH,oBAAOF,KAAA,CAAAa,aAAA,CAACD,OAAO,EAAAE,MAAA,CAAAC,MAAA,KAAKJ,KAAK;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI;AACjC,CAAC;;AAED;AACA,MAAMC,aAAa,GAAIX,KAAK,iBAAKX,KAAA,CAAAa,aAAA,CAACf,iBAAiB,EAAAgB,MAAA,CAAAC,MAAA;EAACQ,MAAM,EAAEjB;AAAW,GAAKK,KAAK;EAAAK,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,iBAAErB,KAAA,CAAAa,aAAA,CAACH,YAAY;EAAAM,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,EAAG,CAAoB;;AAEvH;AACAtB,KAAK,CAACM,aAAa,CAAC,CAACiB,aAAa,CAAC;AAEnC,eAAeA,aAAa"},"metadata":{},"sourceType":"module"}